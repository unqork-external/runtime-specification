// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TestableNestables Contract Tests should ensure the contract is clear 1`] = `
[
  "key",
  "type",
]
`;

exports[`TestableNestables Contract Tests should ensure the contract is clear 2`] = `
{
  "addChildrenData": {
    "description": "Data object to add to component as nestable children",
    "type": "array",
  },
  "childrenInArray": {
    "description": "Child components for the array nestable",
    "items": {
      "$ref": "#/definitions/BaseComponentDefinition",
    },
    "type": "array",
  },
  "display": {
    "$ref": "#/definitions/Display",
  },
  "executable": {
    "default": true,
    "description": "Defines whether or not the object will respond to events or fire operations. When \`true\`, the object will perform and behave as defined in its spec. When \`false\`, the object will no longer be responsive to the system.",
    "type": "boolean",
  },
  "initialMatrixData": {
    "description": "Two dimensional matrix data to add on component initialization",
    "type": "array",
  },
  "inputs": {
    "items": {
      "$ref": "#/definitions/InputRef",
    },
    "type": "array",
  },
  "key": {
    "description": "'key' is the user-defined, unique identifier for an object within a module. It doesn't have to be unique across different modules. Objects within the runtime use keys to target other objects.",
    "examples": [
      "I am the key",
      "bestKeyEver",
    ],
    "minLength": 1,
    "type": "string",
  },
  "matrixRowStructure": {
    "description": "Single array structure that defines what a row within the matrix should look like",
    "items": {
      "$ref": "#/definitions/BaseComponentDefinition",
    },
    "type": "array",
  },
  "nestableType": {
    "default": "array",
    "description": "Current nestable type that the component should implement",
    "type": "string",
  },
  "nestables": {
    "description": "Array-style nestable data",
    "type": "object",
  },
  "package": {
    "$ref": "#/definitions/PackageModel",
  },
  "signals": {
    "description": "An object which contains all of the signals for the component. The signals object can have any number of target keys as defined in the component definition which each contain an array of Signals.",
    "examples": [
      {
        "args": {
          "inputs": {
            "propertyPath": "value",
            "required": true,
            "targetKey": "firstName",
          },
        },
        "id": "firstNameWatcher",
        "operations": [
          {
            "options": {
              "logType": "warn",
              "thingToPrint": "firstNameWatcher operations fired: value watcher triggered",
            },
            "type": "PRINTER",
          },
        ],
        "type": "onWatch",
      },
      {
        "id": "textfieldOnBlur",
        "operations": [
          {
            "options": {
              "logType": "warn",
              "thingToPrint": "textfield received blur event from DOM",
            },
            "type": "PRINTER",
          },
        ],
        "type": "onBlur",
      },
      "<Example> Prompt: "I want a textfield that will trigger the root execute signal on myValidationComponent when the textfield input receives a blur event." Response: [{"key":"yourGeneratedTextfield","type":"textfield","signals":{"input":[{"id":"textfieldOnBlur","operations":[{"type":"EXECUTE","options":{"targetKey":"myValidationComponent","signalTarget":"root","shouldExecute":true}}],"type":"onBlur"}]}}] </Example>",
    ],
    "type": "object",
  },
  "styling": {
    "$ref": "#/definitions/TestableNestablesStyling",
  },
  "type": {
    "const": "testableNestables",
    "description": "Name of the type of component.",
    "examples": [
      "testableNestables",
    ],
    "minLength": 1,
    "type": "string",
  },
  "validation": {
    "$ref": "#/definitions/Validation",
  },
  "value": {
    "description": "Current value of the component",
    "type": [
      "null",
      "integer",
      "number",
      "string",
      "boolean",
      "array",
      "object",
    ],
  },
}
`;
