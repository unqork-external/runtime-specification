// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`API Call Operation Model should match this JSON Schema 1`] = `
{
  "autogenDisabled": true,
  "definitions": {
    "ApiCallModalOptions": {
      "properties": {
        "message": {
          "description": "message refers to the message end-users see in the modal while the data is processing.",
          "examples": [
            "Please wait while your data is being processed...",
          ],
          "type": "string",
        },
        "showModalWhileRunning": {
          "default": false,
          "description": "showModalWhileRunning, when true, will create a modal that informs the end-user that the data is processing.",
          "type": "boolean",
        },
        "titleOnCompletion": {
          "description": "titleOnCompletion is the title end-users see on the modal after the data processes successfully.",
          "examples": [
            "Data Processing Successfully Completed",
          ],
          "type": "string",
        },
        "titleOnError": {
          "description": "titleOnError is the title end-users see on the modal if the data encounters an error while loading.",
          "examples": [
            "Uh oh! Error Loading Data",
          ],
          "type": "string",
        },
        "titleWhileProcessing": {
          "description": "titleWhileProcessing is the title end-users see on the modal while the data is processing.",
          "examples": [
            "Processing Your Request",
          ],
          "type": "string",
        },
      },
      "type": "object",
    },
    "ApiCallOptions": {
      "description": "API_CALL will perform a request per defined specifications and map the results to the relevant locations in the system.",
      "if": {
        "properties": {
          "topLevelArray": {
            "const": true,
          },
        },
      },
      "properties": {
        "arrayKeyPromote": {
          "description": "arrayKeyPromote refers to the value that should be used when 'topLevelArray' is set to true.",
          "type": "string",
        },
        "assignAPIValues": {
          "default": false,
          "description": "assignAPIValues refers to how to handle/map responses from the API call. When set to true, API response values may be assigned to components directly.",
          "type": "boolean",
        },
        "assignEmptyValues": {
          "default": true,
          "description": "If an output comes back empty, you can either have the data store as an empty value or choose not to store the data. By setting this toggle to true, null or empty strings store as empty values. If set to OFF, the values don't record. https://docs.unqork.io/Content/A05-ModEditor-Data_Event/A05006A-Plug-In_Component.htm?Highlight=Assign%20Empty%20Values#:~:text=Assign%20Values%20if%20They%20Are%20Null%20or%20Empty%20String By default, this toggle is set to true.",
          "type": "boolean",
        },
        "assumeDataKeyInResponse": {
          "default": false,
          "description": "assumeDataKeyInResponse refers to how to access data from the response of the API Call. When set to true, the 'data.' prefix can be removed from mapping fields.",
          "type": "boolean",
        },
        "assumeRole": {
          "default": true,
          "description": "By default, all requests made with an API_CALL operation will assume the role provided by engineArgs.assumeRoleOverride. To disable this behaviour for a particular operation, set this boolean to false.",
          "type": "boolean",
        },
        "blockExecution": {
          "default": false,
          "description": "When set to true, execution of the API Call will be blocked.",
          "type": "boolean",
        },
        "convertXmlResponseToJson": {
          "default": false,
          "description": "convertXmlResponseToJson should be enabled when an API is known to return XML response.",
          "type": "boolean",
        },
        "ensureJSONPathExistsInResponse": {
          "description": "ensureJSONPathExistsInResponse lets you set a required property path return value. If the path isn't present in the response body, the call results in an error.",
          "type": "string",
        },
        "errorOutputs": {
          "description": "errorOutputs refers to the list of specified error handling components.",
          "items": {
            "$ref": "#/definitions/ErrorsArgs",
          },
          "type": "array",
        },
        "expectBinaryResponse": {
          "default": false,
          "description": "expectBinaryResponse should be enabled when you expect the API call to return a large file, and/or want to store the response in its original file format. When set to true, the response doesn't convert to or store as base64.",
          "type": "boolean",
        },
        "flattenToSingleRecord": {
          "default": false,
          "description": "flattenToSingleRecord refers to how the API call results will be stored. When set to true, the module flattens results into a single record value. When set to OFF, the module leaves the unflattened results in multiple values.",
          "type": "boolean",
        },
        "headers": {
          "type": "object",
        },
        "inputs": {
          "description": "inputs refers to the options that let you map data from components in your module into an API call.",
          "items": {
            "$ref": "#/definitions/ApiInputs",
          },
          "type": "array",
        },
        "isMultiPartRequest": {
          "default": false,
          "description": "isMultiPartRequest, when set to true, combines one or more sets of data into a single body.",
          "type": "boolean",
        },
        "maximumRetryCount": {
          "default": 3,
          "description": "maximumRetryCount refers to the maximum number of retries on a failed API call. The maximum number of retries is 10.",
          "maximum": 10,
          "minimum": 0,
          "type": "number",
        },
        "method": {
          "description": "method refers to the HTTP request method for the API call.",
          "enum": [
            "GET",
            "DELETE",
            "HEAD",
            "OPTIONS",
            "POST",
            "PUT",
            "PATCH",
            "PURGE",
            "LINK",
            "UNLINK",
          ],
          "examples": [
            "GET",
            "POST",
          ],
          "minLength": 1,
          "type": "string",
        },
        "modalOptions": {
          "$ref": "#/definitions/ApiCallModalOptions",
        },
        "multipartSubType": {
          "description": "multipartSubType is used to specify whether the parts of a multipart API request are related, mixed, or otherwise correlated.",
          "type": "string",
        },
        "outputValuesOnly": {
          "default": false,
          "description": "outputValuesOnly refers to how the output from the API call should be handled. When set to true, the API response is not logged and the outputs are appropriately mapped and handled. When set to false, the entire API call response is logged in the DevTools Console before the output handling occurs.",
          "type": "boolean",
        },
        "outputs": {
          "description": "outputs refers to options that let you map data from an API call response to other components in your module.",
          "items": {
            "$ref": "#/definitions/ApiOutputArgs",
          },
          "type": "array",
        },
        "postTriggerOutputs": {
          "description": "postTriggerOutputs refers to the list of components to trigger after the API call is completed.",
          "items": {
            "$ref": "#/definitions/PostTriggerArgs",
          },
          "type": "array",
        },
        "preRequestTransform": {
          "$ref": "#/definitions/PreRequestTransform",
        },
        "preTriggerOutputs": {
          "description": "preTriggerOutputs is the list of components to trigger concurrently when the API call is made.",
          "items": {
            "$ref": "#/definitions/PreTriggerArgs",
          },
          "type": "array",
        },
        "queryParams": {
          "type": "string",
        },
        "retryDelayInMS": {
          "description": "retryDelayInMS refers to the number of milliseconds to wait before trying the API call again after it failed. The maximum delay is 10,000 ms.",
          "maximum": 10000,
          "minimum": 0,
          "type": "number",
        },
        "service": {
          "description": "service refers to a predefined Service that when selected, populates most of the API call configuration.",
          "type": "string",
        },
        "serviceType": {
          "default": "UNQORK",
          "description": "serviceType can be set to either 'Unqork' or 'External. Unqork service type has a number of preconfigured, internal API services. These API calls help you create files, convert files, and access or edit submission data. External service type can make an API call to an external source. You must configure these services in Unqork's Services Administration.",
          "enum": [
            "EXTERNAL",
            "UNQORK",
          ],
          "type": "string",
        },
        "shouldExecute": {
          "default": true,
          "description": "
    Conditionally execute this operation.
    Can set to false to temporarily disabled when debugging.
  ",
          "type": [
            "string",
            "boolean",
          ],
        },
        "spinnerOptions": {
          "$ref": "#/definitions/ApiCallSpinnerOptions",
        },
        "throwIfErrorStatus": {
          "default": false,
          "description": "If the API_CALL fails when attempting to make the request, then this will cause the API_CALL operation to throw an ApiCallResponseError, ApiCallRequestError, or ApiCallPreRequestError. The ApiCallResponseError contains the statusCode and data from the error response. When true, this will also make the API_CALL blockExecution, because errors can only be caught if we await execution.",
          "type": "boolean",
        },
        "timeoutInMS": {
          "description": "timeoutInMS refers to the number of milliseconds that pass before the API call times out. The maximum timeout is 120,000 ms.",
          "maximum": 120000,
          "minimum": 0,
          "type": "number",
        },
        "topLevelArray": {
          "default": false,
          "description": "topLevelArray should be set to true when you want to add a top level array/object to the request body. When topLevelArray is true, the string value of 'arrayKeyPromote' will be promoted to the top level. https://docs.unqork.io/Content/A05-ModEditor-Data_Event/A05006A-Plug-In_Component.htm#:~:text=multipart%20API%C2%A0call.-,Promote%20Object/Array%20to%20Top%20Level,-%3A%20Use%20this%20setting",
          "type": "boolean",
        },
        "url": {
          "description": "url refers to the URL endpoint for the API call.",
          "examples": [
            "https://pokeapi.co/api/v2/pokemon-species",
          ],
          "minLength": 1,
          "type": "string",
        },
        "withCredentials": {
          "default": false,
          "description": "withCredentials refers to the inclusion of credentials on cross-site requests. When set to true, an application can make cross-site access-control requests using credentials, like cookies.",
          "type": "boolean",
        },
      },
      "required": [
        "method",
        "url",
        "outputs",
      ],
      "then": {
        "dependentRequired": {
          "topLevelArray": [
            "arrayKeyPromote",
          ],
        },
      },
      "type": "object",
    },
    "ApiCallSpinnerOptions": {
      "properties": {
        "showCursorSpinner": {
          "default": false,
          "description": "showCursorSpinner, when true, turns the end-users cursor into a spinner while data processes.",
          "type": "boolean",
        },
        "showPageSpinner": {
          "default": false,
          "description": "showPageSpinner, when set to true, has the page display a spinning icon while data processes.",
          "type": "boolean",
        },
      },
      "type": "object",
    },
    "ApiInputs": {
      "properties": {
        "alias": {
          "description": "alias is the optional alternate name that can be used to refer to the targeted input.",
          "examples": [
            "A",
          ],
          "type": "string",
        },
        "appearInHeader": {
          "default": false,
          "description": "appearInHeader will pass the input as a part of the API request header instead of body when set to true.",
          "type": "boolean",
        },
        "base64": {
          "default": false,
          "description": "base64, when set to true, prepares the system to receive a base64 file from the API response.",
          "type": "boolean",
        },
        "exclude": {
          "default": false,
          "description": "exclude, when true, won't pass the input field as a part of the API calls body.",
          "type": "boolean",
        },
        "optional": {
          "default": false,
          "description": "optional, when true, will not pass the input to the API request body if it is empty or null.",
          "type": "boolean",
        },
        "propertyPath": {
          "description": "targetKey refers to the targeted input for the API call.",
          "examples": [
            "value[0]['url']",
            "data.something.other",
          ],
          "type": "string",
        },
        "required": {
          "default": false,
          "description": "required, when true, ensures the targeted input has a value before moving ahead or saving the module.",
          "type": "boolean",
        },
        "targetKey": {
          "description": "targetKey refers to the targeted input for the API call.",
          "examples": [
            "textfield99",
            "SGVsbG8gV29ybGQh",
          ],
          "minLength": 1,
          "type": "string",
        },
      },
      "required": [
        "targetKey",
      ],
      "type": "object",
    },
    "ApiOutputArgs": {
      "properties": {
        "modifiers": {
          "$ref": "#/definitions/OutputModifiers",
        },
        "property": {
          "default": "value",
          "description": "property refers to the property to be set on the targeted output.",
          "type": "string",
        },
        "responseJSONPath": {
          "description": "responseJSONPath is the path to the data that is to be extracted from the API response.",
          "examples": [
            "name",
            "data.group[0].description",
          ],
          "type": "string",
        },
        "seekValuesFromHeader": {
          "default": false,
          "description": "seekValuesFromHeader looks for the output value in the API response header instead of its body when true.",
          "type": "boolean",
        },
        "targetKey": {
          "description": "targetKey refers to the output target for the API call.",
          "examples": [
            "hidden",
          ],
          "minLength": 1,
          "type": "string",
        },
        "useJSONPath": {
          "description": "Use JSONPath query syntax instead of lodash \`get\`.",
          "type": "boolean",
        },
      },
      "required": [
        "targetKey",
      ],
      "type": "object",
    },
    "ErrorsArgs": {
      "properties": {
        "targetKey": {
          "description": "targetKey refers to the component that is meant to be fired when the API call results in an error.",
          "examples": [
            "errorModal",
          ],
          "minLength": 1,
          "type": "string",
        },
      },
      "required": [
        "targetKey",
      ],
      "type": "object",
    },
    "OutputModifiers": {
      "properties": {
        "shouldDisable": {
          "default": false,
          "description": "shouldDisable will map the response to the appropriate output and then disable that field when set to true.",
          "type": "boolean",
        },
        "shouldOverwrite": {
          "default": true,
          "description": "shouldOverwrite will overwrite a preexisting value in the mapped output field when set to true.",
          "type": "boolean",
        },
        "shouldValidate": {
          "default": false,
          "description": "shouldValidate will ensure validation occurs based on the output fields settings when set to true.",
          "type": "boolean",
        },
      },
      "type": "object",
    },
    "PostTriggerArgs": {
      "properties": {
        "targetKey": {
          "description": "targetKey refers to what is meant to be triggered after the API call is executed.",
          "examples": [
            "apiCallFollowUp",
          ],
          "minLength": 1,
          "type": "string",
        },
      },
      "required": [
        "targetKey",
      ],
      "type": "object",
    },
    "PreRequestTransform": {
      "properties": {
        "formId": {
          "minLength": 1,
          "type": "string",
        },
        "name": {
          "minLength": 1,
          "type": "string",
        },
      },
      "required": [
        "formId",
        "name",
      ],
      "type": "object",
    },
    "PreTriggerArgs": {
      "properties": {
        "targetKey": {
          "description": "targetKey refers to what is meant to be triggered before the API call is executed.",
          "examples": [
            "preRequestAction",
          ],
          "minLength": 1,
          "type": "string",
        },
      },
      "required": [
        "targetKey",
      ],
      "type": "object",
    },
  },
  "description": "Represents legacy behavior from the Plugin component performing REST API calls.",
  "properties": {
    "creatorSummary": {
      "description": "A detailed summary of the operation",
      "type": "string",
    },
    "name": {
      "description": "Name of the operation",
      "type": "string",
    },
    "options": {
      "$ref": "#/definitions/ApiCallOptions",
    },
    "type": {
      "const": "API_CALL",
      "examples": [
        "API_CALL",
      ],
      "type": "string",
    },
  },
  "required": [
    "options",
  ],
  "type": "object",
}
`;
