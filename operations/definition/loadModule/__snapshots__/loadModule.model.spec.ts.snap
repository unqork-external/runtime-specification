// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Operation Model: LoadModule Tests should match this JSON Schema 1`] = `
{
  "definitions": {
    "InputRef": {
      "description": "Objects may define other targets that they refer to. This becomes a link for operation execution within the Runtime.",
      "properties": {
        "alias": {
          "type": "string",
        },
        "propertyPath": {
          "type": "string",
        },
        "required": {
          "type": "boolean",
        },
        "silent": {
          "type": "boolean",
        },
        "targetKey": {
          "minLength": 1,
          "type": "string",
        },
        "type": {
          "type": "string",
        },
      },
      "required": [
        "targetKey",
      ],
      "type": "object",
    },
    "LoadModuleOperationOptions": {
      "properties": {
        "collisionHandler": {
          "description": "How should module ID collisions be handled",
          "type": "string",
        },
        "inputs": {
          "description": "
    Inputs to be used within formulas in other operation options.
  ",
          "items": {
            "$ref": "#/definitions/InputRef",
          },
          "type": "array",
        },
        "method": {
          "default": "GET",
          "description": "
    HTTP Method to use when loading module
  ",
          "type": "object",
        },
        "moduleId": {
          "description": "ID corresponding to module that should be loaded.",
          "type": "string",
        },
        "moduleSpec": {
          "description": "
    A full module definition or array of components to render at the target slot

    Support Vega or Centauri spec, will be converted to Vega before rendering
  ",
          "type": "object",
        },
        "moduleUrl": {
          "description": "
    URL to load module spec from.
    Most commonly used with server-side executes or transforms
  ",
          "examples": [
            "path/to/my/sse-module",
          ],
          "type": "string",
        },
        "pathToModuleDefinition": {
          "description": "
    Path to module definition

    Used with moduleUrl to extract definition from a path
  ",
          "examples": [
            "data.moduleDefinition",
          ],
          "type": "string",
        },
        "shouldExecute": {
          "default": true,
          "description": "
    Conditionally execute this operation.
    Can set to false to temporarily disabled when debugging.
  ",
          "type": [
            "string",
            "boolean",
          ],
        },
        "targetKey": {
          "description": "Target Key identifying component in which the module should be rendered.",
          "minLength": 1,
          "type": "string",
        },
        "targetNestable": {
          "description": "Name of the nestable in which the module should be rendered.",
          "minLength": 1,
          "type": "string",
        },
      },
      "required": [
        "targetKey",
        "targetNestable",
      ],
      "type": "object",
    },
  },
  "properties": {
    "creatorSummary": {
      "description": "A detailed summary of the operation",
      "type": "string",
    },
    "name": {
      "description": "Name of the operation",
      "type": "string",
    },
    "options": {
      "$ref": "#/definitions/LoadModuleOperationOptions",
    },
    "type": {
      "const": "LOAD_MODULE",
      "examples": [
        "LOAD_MODULE",
      ],
      "type": "string",
    },
  },
  "required": [
    "options",
  ],
  "type": "object",
}
`;
