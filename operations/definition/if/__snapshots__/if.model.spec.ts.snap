// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Operation Model: If Tests test that the schema matches our expectations 1`] = `
{
  "properties": {
    "conditions": {
      "description": "The set of conditions to fire or evaluate. This could be represented as something as simple as firstName.value == "john" or an operation like VALIDATE.",
      "items": {
        "$ref": "#/definitions/Condition",
      },
      "type": "array",
    },
    "inputs": {
      "description": "
    Inputs to be used within formulas in other operation options
  ",
      "items": {
        "$ref": "#/definitions/InputRef",
      },
      "type": "array",
    },
    "onFail": {
      "description": "Optionally set a bunch of operations to fire when if the conditions return as a failure. If the conditions fail and error, we'll run the fail operations, and terminate the operation chain.",
      "items": {
        "$ref": "#/definitions/Operation",
      },
      "type": "array",
    },
    "shouldExecute": {
      "description": "
    Conditionally execute this operation based on a formula.
    Can set to false to temporarily disabled when debugging
  ",
      "type": [
        "string",
        "boolean",
      ],
    },
    "whenFalse": {
      "description": "Optionally set a bunch of operations to fire when if the conditions return as unsuccessful. If unsuccessful, we'll run the false conditions, and continue down the operation chain.",
      "items": {
        "$ref": "#/definitions/Operation",
      },
      "type": "array",
    },
    "whenTrue": {
      "description": "Optionally set a bunch of operations to fire when if the conditions return as successful. This is not intended to always be used - this is a convenience field in case it reads better for the user Operations continue firing if the conditions are true anyway. if you put all happy path execution in a \`whenTrue\` you risk causing a Pyramid of Doom antipattern for logical representation.",
      "items": {
        "$ref": "#/definitions/Operation",
      },
      "type": "array",
    },
  },
  "type": "object",
}
`;

exports[`Operation Model: If Tests test that the schema matches our expectations 2`] = `
{
  "properties": {
    "creatorSummary": {
      "description": "A detailed summary of the operation",
      "type": "string",
    },
    "name": {
      "description": "Name of the operation",
      "type": "string",
    },
    "options": {
      "$ref": "#/definitions/IfOperationOptions",
    },
    "type": {
      "const": "IF",
      "examples": [
        "IF",
      ],
      "type": "string",
    },
  },
  "required": [
    "options",
  ],
  "type": "object",
}
`;
